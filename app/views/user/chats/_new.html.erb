<div class="chat_new_component">
<%= form_with model:  chat, url:user_chats_path, method:"POST" do |f| %>
      
    <div class="field_area">
      <div class="input_field_area">
      

      <%= f.label :user_name %></br>
      <%= f.text_field :user_name,value:session[:user_name], class:"user_name input_field" %></br>

      <%= f.label :question %></br>
      <%= f.text_area :question ,autocomplete: "new-password", class:"input_field text_area",value:"" ,required: true%>

      <!--送信ボタン -->
      <%= f.submit "　　", class:"submit", id:"submit" %>
      <svg class="submit_icon"stroke="currentColor" fill="none" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4 mr-1" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg">
        <line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2">
        </polygon>
      </svg>

      </div>
    </div>
    <%=f.hidden_field :prequel_chat_id, value: chat.prequel_chat_id %>
<% end %>
</div>
<script>
window.addEventListener("DOMContentLoaded", () => {
  // textareaタグを全て取得
  const textareaEls = document.querySelectorAll("textarea");

  textareaEls.forEach((textareaEl) => {
    // デフォルト値としてスタイル属性を付与
    textareaEl.setAttribute("style", `height: ${textareaEl.scrollHeight}px;`);
    // inputイベントが発生するたびに関数呼び出し
    textareaEl.addEventListener("input", setTextareaHeight);
  });

  // textareaの高さを計算して指定する関数
  function setTextareaHeight() {
    this.style.height = "auto";
    this.style.height = `${this.scrollHeight}px`;
  }
});
</script>